import nltk
import string
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

nltk.download('punkt')
nltk.download('stopwords')

faq_data = {
    "What is global warming?": "Global warming is the long-term heating of Earth’s climate due to human activities, especially fossil fuel burning.",
    "What causes global warming?": "It is caused mainly by greenhouse gases like carbon dioxide and methane from burning fossil fuels, deforestation, and industrial processes.",
    "What are the effects of global warming?": "Effects include rising sea levels, melting ice caps, extreme weather events, and loss of biodiversity.",
    "How can we prevent global warming?": "We can reduce emissions, use renewable energy, plant trees, and conserve energy to combat global warming.",
    "What is the greenhouse effect?": "The greenhouse effect is when gases trap heat in the Earth’s atmosphere, warming the planet.",
    "Is climate change the same as global warming?": "Global warming is a part of climate change, which includes broader changes like shifts in precipitation and weather patterns.",
    "How does global warming affect the oceans?": "It causes ocean warming, acidification, and sea level rise, threatening marine life and coastal communities.",
    "Can individuals make a difference in reducing global warming?": "Yes, actions like using public transport, conserving energy, and reducing waste can help lower emissions.",
    "How does deforestation contribute to global warming?": "Deforestation reduces the number of trees that absorb CO2, increasing the amount of greenhouse gases in the atmosphere.",
    "What are greenhouse gases?": "Greenhouse gases are gases like carbon dioxide, methane, and nitrous oxide that trap heat in the atmosphere and contribute to global warming.",
    "How does transportation affect climate change?": "Vehicles burn fossil fuels, releasing carbon dioxide and other pollutants that contribute to the greenhouse effect.",
    "What role do fossil fuels play in global warming?": "Burning fossil fuels like coal, oil, and gas releases large amounts of carbon dioxide, a major greenhouse gas.",
    "Why are polar ice caps important?": "They reflect sunlight and help regulate Earth's temperature. Melting ice leads to rising sea levels and habitat loss.",
    "What are carbon footprints?": "A carbon footprint is the total amount of greenhouse gases generated by our actions, such as driving or using electricity.",
    "How does agriculture contribute to global warming?": "Agriculture contributes through methane emissions from livestock, deforestation, and use of chemical fertilizers.",
    "What is renewable energy and how does it help?": "Renewable energy comes from natural sources like wind, solar, and hydro. It helps reduce greenhouse gas emissions.",
    "What are climate refugees?": "Climate refugees are people forced to leave their homes due to extreme weather, sea level rise, or other climate-related issues.",
    "What is the Paris Agreement?": "It’s a global pact adopted in 2015 where countries pledged to limit global warming to below 2°C above pre-industrial levels."
}

stop_words = set(stopwords.words('english'))

def preprocess(text):
    text = text.lower()
    text = text.translate(str.maketrans('', '', string.punctuation))
    tokens = word_tokenize(text)
    tokens = [word for word in tokens if word not in stop_words]
    return " ".join(tokens)

questions = list(faq_data.keys())
preprocessed_questions = [preprocess(q) for q in questions]
vectorizer = TfidfVectorizer()
question_vectors = vectorizer.fit_transform(preprocessed_questions)

def get_bot_response(user_input):
    user_input_preprocessed = preprocess(user_input)
    user_vector = vectorizer.transform([user_input_preprocessed])
    similarity = cosine_similarity(user_vector, question_vectors)
    best_index = similarity.argmax()
    best_score = similarity[0][best_index]
    if best_score > 0.3:
        return faq_data[questions[best_index]]
    else:
        return "Sorry, I couldn't understand your question. Please try asking differently."